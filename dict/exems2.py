'''exems'''


''' —á–∞—Å—Ç—å 1 '''

my_dict = {'C1': [10, 20, 30, 7, 6, 23, 90], 'C2': [20, 30, 40, 1, 2, 3, 90, 12], 'C3': [12, 34, 20, 21],
           'C4': [22, 54, 209, 21, 7], 'C5': [2, 4, 29, 21, 19], 'C6': [4, 6, 7, 10, 55], 'C7': [4, 8, 12, 23, 42],
           'C8': [3, 14, 15, 26, 48], 'C9': [2, 7, 18, 28, 18, 28]}


result = {key: [i for i in my_dict[key] if i <= 20] for key in my_dict}
print(result)


''' —á–∞—Å—Ç—å 1/2 '''

emails = {'nosu.edu': ['timyr', 'joseph', 'svetlana.gaeva', 'larisa.mamuk'],
          'gmail.com': ['ruslan.chaika', 'rustam.mini', 'stepik-best'],
          'msu.edu': ['apple.fruit', 'beegeek', 'beegeek.school'],
          'yandex.ru': ['surface', 'google'],
          'hse.edu': ['tomas-henders', 'cream.soda', 'zivert'],
          'mail.ru': ['angel.down', 'joanne', 'the.fame.moster']}


result = sorted(i + '@' + key for key, values in emails.items() for i in values)
print(*result, sep='\n')


''' or '''

emails = {'nosu.edu': ['timyr', 'joseph', 'svetlana.gaeva', 'larisa.mamuk'],
          'gmail.com': ['ruslan.chaika', 'rustam.mini', 'stepik-best'],
          'msu.edu': ['apple.fruit', 'beegeek', 'beegeek.school'],
          'yandex.ru': ['surface', 'google'],
          'hse.edu': ['tomas-henders', 'cream.soda', 'zivert'],
          'mail.ru': ['angel.down', 'joanne', 'the.fame.moster']}

print(*sorted(f"{name}@{domain}" for domain in emails for name in emails[domain]), sep='\n')



''' –ú–∏–Ω—É—Ç–∫–∞ –≥–µ–Ω–µ—Ç–∏–∫–∏ '''

d = {'ACGT'[i]: 'UGCA'[i] for i in range(4)}
for i in input():
    print(d[i], end='')


''' or '''

ils = {'A': 'U', 'C': 'G', 'G': 'C', 'T': 'A'}


result = [ils[i] for i in input()]
print(*result, end='')



''' –ü–æ—Ä—è–¥–∫–æ–≤—ã–π –Ω–æ–º–µ—Ä '''

words = input().split()
result = {}

for word in words:
    result[word] = result.get(word, 0) + 1
    print(result[word], end=' ')


''' or '''

words = input().split()
print(*[words[:i+1].count(words[i]) for i in range(len(words))])





''' Scrabble game '''



def scrabble_score(word):
    d = {
        1: "AEILNORSTU",
        2: "DG",
        3: "BCMP",
        4: "FHVWY",
        5: "K",
        8: "JX",
        10: "QZ"
    }

    # –ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ —Å–ª–æ–≤–∞ –≤ –≤–µ—Ä—Ö–Ω–∏–π —Ä–µ–≥–∏—Å—Ç—Ä –¥–ª—è —É–¥–æ–±—Å—Ç–≤–∞
    word = word.upper()

    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å—á–µ—Ç—á–∏–∫–∞ —Å—Ç–æ–∏–º–æ—Å—Ç–∏
    total_score = 0

    # –ò—Ç–µ—Ä–∞—Ü–∏—è –ø–æ –∫–∞–∂–¥–æ–π –±—É–∫–≤–µ –≤ —Å–ª–æ–≤–µ
    for letter in word:
        # –ò—â–µ–º, –∫ –∫–∞–∫–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –±—É–∫–≤–∞ –ø—Ä–∏–Ω–∞–¥–ª–µ–∂–∏—Ç, –∏ –ø—Ä–∏–±–∞–≤–ª—è–µ–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–µ –±–∞–ª–ª—ã
        for score, letters in d.items():
            if letter in letters:
                total_score += score

    return total_score

# –ß—Ç–µ–Ω–∏–µ –≤—Ö–æ–¥–Ω–æ–≥–æ —Å–ª–æ–≤–∞
input_word = input()

# –í—ã–∑–æ–≤ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –ø–æ–¥—Å—á–µ—Ç–∞ —Å—Ç–æ–∏–º–æ—Å—Ç–∏ –∏ –≤—ã–≤–æ–¥ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
result = scrabble_score(input_word)
print(result)



''' or '''


my_dict = {
        1: "AEILNORSTU",
        2: "DG",
        3: "BCMP",
        4: "FHVWY",
        5: "K",
        8: "JX",
        10: "QZ"
    }

s = input().upper()
result = [key for letter in s for key, value in my_dict.items() if letter in value]
print(sum(result))



''' or '''



d = {
    1: "AEILNORSTU",
    2: "DG",
    3: "BCMP",
    4: "FHVWY",
    5: "K",
    8: "JX",
    10: "QZ"
}

print(sum([k for i in input() for k, v in d.items() if i in v]))





''' –°—Ç—Ä–æ–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ '''


def build_query_string(params):
    # –°–æ—Ä—Ç–∏—Ä—É–µ–º –∫–ª—é—á–∏ —Å–ª–æ–≤–∞—Ä—è –≤ –ª–µ–∫—Å–∏–∫–æ–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–æ–º –ø–æ—Ä—è–¥–∫–µ
    sorted_keys = sorted(params.keys())

    # –°–æ–∑–¥–∞–µ–º —Å–ø–∏—Å–æ–∫ —Å—Ç—Ä–æ–∫ –¥–ª—è –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏—è –∫–∞–∂–¥–æ–≥–æ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞
    param_strings = []

    # –ò—Ç–µ—Ä–∏—Ä—É–µ–º—Å—è –ø–æ –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–º –∫–ª—é—á–∞–º
    for key in sorted_keys:
        # –ü–æ–ª—É—á–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ –∫–ª—é—á—É
        value = params[key]

        # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –∫–ª—é—á –∏ –∑–Ω–∞—á–µ–Ω–∏–µ –≤ —Å—Ç—Ä–æ–∫—É –∏ –¥–æ–±–∞–≤–ª—è–µ–º –∏—Ö –≤ —Å–ø–∏—Å–æ–∫
        param_strings.append(f"{key}={value}")

    # –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å–∏–º–≤–æ–ª –∞–º–ø–µ—Ä—Å–∞–Ω–¥–∞ –¥–ª—è –æ–±—ä–µ–¥–∏–Ω–µ–Ω–∏—è —Å—Ç—Ä–æ–∫ –∏–∑ —Å–ø–∏—Å–∫–∞ –≤ –µ–¥–∏–Ω—É—é —Å—Ç—Ä–æ–∫—É –∑–∞–ø—Ä–æ—Å–∞
    query_string = "&".join(param_strings)

    return query_string

# –ü—Ä–∏–º–µ—Ä—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —Ñ—É–Ω–∫—Ü–∏–∏
query1 = build_query_string({'name': 'timur', 'age': 28})
query2 = build_query_string({'sport': 'hockey', 'game': 2, 'time': 17})

# –í—ã–≤–æ–¥–∏–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
print(query1)  # –î–æ–ª–∂–Ω–æ –≤—ã–≤–µ—Å—Ç–∏: age=28&name=timur
print(query2)  # –î–æ–ª–∂–Ω–æ –≤—ã–≤–µ—Å—Ç–∏: game=2&sport=hockey&time=17



''' or '''


def build_query_string(params):
    res = [f'{k}={v}' for k, v in params.items()]
    return '&'.join(sorted(res))




''' –°–ª–∏—è–Ω–∏–µ —Å–ª–æ–≤–∞—Ä–µ–π üå∂Ô∏è '''


def merge(list_of_dicts):
    result = {}  # –°–æ–∑–¥–∞–µ–º –ø—É—Å—Ç–æ–π —Å–ª–æ–≤–∞—Ä—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
    for d in list_of_dicts:  # –ò—Ç–µ—Ä–∏—Ä—É–µ–º—Å—è –ø–æ –∫–∞–∂–¥–æ–º—É —Å–ª–æ–≤–∞—Ä—é –≤ —Å–ø–∏—Å–∫–µ
        for key, value in d.items():  # –ò—Ç–µ—Ä–∏—Ä—É–µ–º—Å—è –ø–æ –∫–∞–∂–¥–æ–π –ø–∞—Ä–µ –∫–ª—é—á-–∑–Ω–∞—á–µ–Ω–∏–µ –≤ —Å–ª–æ–≤–∞—Ä–µ
            result.setdefault(key, set()).add(value)
            # setdefault(key, set()) —Å–æ–∑–¥–∞–µ—Ç –º–Ω–æ–∂–µ—Å—Ç–≤–æ –¥–ª—è –∫–ª—é—á–∞, –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
            # add(value) –¥–æ–±–∞–≤–ª—è–µ—Ç –∑–Ω–∞—á–µ–Ω–∏–µ –≤ —ç—Ç–æ –º–Ω–æ–∂–µ—Å—Ç–≤–æ
    return result  # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –ø–æ–ª—É—á–µ–Ω–Ω—ã–π —Å–ª–æ–≤–∞—Ä—å

# –ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è:
result = merge([{'a': 1, 'b': 2}, {'b': 10, 'c': 100}, {'a': 1, 'b': 17, 'c': 50}, {'a': 5, 'd': 777}])

print(result)
# –í—ã–≤–µ–¥–µ—Ç: {'a': {1, 5}, 'b': {2, 10, 17}, 'c': {50, 100}, 'd': {777}}


''' or '''

def merge(values):
    res = {}
    for d in values:
        for k, v in d.items():
            res.setdefault(k, set()).add(v)
    return res




''' –û–ø–∞—Å–Ω—ã–π –≤–∏—Ä—É—Å üòà '''


result = {}
dict_operations = {'W' : 'write', 'R' : 'read', 'X' : 'execute'}

for _ in range(int(input())):
    x = input().split()
    result[x[0]] = [dict_operations[i] for i in x[1:]]

for _ in range(int(input())):
    x = input().split()
    if x[0] in result[x[1]]:
        print("OK")
    else:
        print("Access denied")



''' or '''

transform = {'execute': 'X', 'write': 'W', 'read': 'R'}
mydict = {}

for _ in range(int(input())):
    name, *operations = input().split()
    mydict[name] = operations

for _ in range(int(input())):
    operation, name = input().split()
    if transform[operation] in mydict[name]:
        print('OK')
    else:
        print('Access denied')




''' –ü–æ–∫—É–ø–∫–∏ –≤ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-–º–∞–≥–∞–∑–∏–Ω–µ üå∂Ô∏è '''


from collections import defaultdict

def count_items(data):
    # –ò—Å–ø–æ–ª—å–∑—É–µ–º defaultdict –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –æ –ø–æ–∫—É–ø–∫–∞—Ö
    purchases = defaultdict(lambda: defaultdict(int))

    # –ó–∞–ø–æ–ª–Ω—è–µ–º purchases –¥–∞–Ω–Ω—ã–º–∏ –∏–∑ –≤—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
    for line in data:
        # –†–∞–∑–±–∏–≤–∞–µ–º —Å—Ç—Ä–æ–∫—É –Ω–∞ –æ—Ç–¥–µ–ª—å–Ω—ã–µ —á–∞—Å—Ç–∏: –ø–æ–∫—É–ø–∞—Ç–µ–ª—å, —Ç–æ–≤–∞—Ä –∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ
        buyer, item, quantity = line.split()
        # –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º —Å—á–µ—Ç—á–∏–∫ —Ç–æ–≤–∞—Ä–∞ –¥–ª—è –¥–∞–Ω–Ω–æ–≥–æ –ø–æ–∫—É–ø–∞—Ç–µ–ª—è
        purchases[buyer][item] += int(quantity)

    # –°–æ—Ä—Ç–∏—Ä—É–µ–º –∏ –≤—ã–≤–æ–¥–∏–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    buyers = sorted(purchases.keys())
    for buyer in buyers:
        print(f"{buyer}:")
        # –°–æ—Ä—Ç–∏—Ä—É–µ–º —Ç–æ–≤–∞—Ä—ã –¥–ª—è –¥–∞–Ω–Ω–æ–≥–æ –ø–æ–∫—É–ø–∞—Ç–µ–ª—è
        items = sorted(purchases[buyer].keys())
        for item in items:
            # –í—ã–≤–æ–¥–∏–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–µ –∫–∞–∂–¥–æ–≥–æ —Ç–æ–≤–∞—Ä–∞
            print(f"  {item}: {purchases[buyer][item]}")

# –ß—Ç–µ–Ω–∏–µ –≤—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
n = int(input())
input_data = [input() for _ in range(n)]

# –í—ã–∑–æ–≤ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –¥–∞–Ω–Ω—ã—Ö –∏ –≤—ã–≤–æ–¥–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
count_items(input_data)




''' or '''


database = {}
for _ in range(int(input())):
    name, good, amount = input().split()
    database[name][good] = database.setdefault(name, {}).get(good, 0) + int(amount)

for name, goods in sorted(database.items()):
    print(name + ':')
    for good, amount in sorted(goods.items()):
        print(good, amount)




''' exems end '''